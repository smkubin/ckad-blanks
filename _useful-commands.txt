### etcdctl
cat /etc/kubernetes/manifests/etcd.yaml | grep -- "--"
cat /etc/kubernetes/manifests/etcd.yaml | grep -A1 hostPath
ETCDCTL_API=3 \
etcdctl snapshot save ~/db.db --cacert /etc/kubernetes/pki/etcd/ca.crt --cert /etc/kubernetes/pki/etcd/server.crt --key /etc/kubernetes/pki/etcd/server.key \
--endpoints 127.0.0.1:2379
# read etcd key
ETCDCTL_API=3 etcdctl --cacert=/etc/kubernetes/pki/etcd/ca.crt --cert=/etc/kubernetes/pki/etcd/server.crt --key=/etc/kubernetes/pki/etcd/server.key \
get /registry/secrets/default/secret1 | hexdump -C
# alternatively: find etcd process, in proc/pid/fd find db and look there

### AppArmor https://kubernetes.io/docs/tutorials/security/apparmor/
aa-status


### cluster init
source <(kubeadm completion bash)
kubeadm init
# Calico
kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml
#
kubeadm token create --print-join-command


### Helm
source <(helm completion bash)
helm list -A -a # all states, all namespaces
helm show values bitnami/apache | less -X
helm install -n my-namespace release-names chart/name --set replicaCount=2


### RBAC
# get a token of a service account from a secret and decode it
kubectl get secrets -n default serviceaccount-secret -o jsonpath={.data.token} | base64 --decode

# Role + RoleBinding (available in single Namespace, applied in single Namespace)
# ClusterRole + ClusterRoleBinding (available cluster-wide, applied cluster-wide)
# ClusterRole + RoleBinding (available cluster-wide, applied in single Namespace)
kubectl create serviceaccount pipeline -n ns1  
kubectl create clusterrolebinding pipeline --clusterrole view --serviceaccount ns1:pipeline
#
kubectl create clusterrole deployment-mgr --verb create,delete --resource deployments
kubectl -n ns1 create rolebinding pipeline-deployment-manager --clusterrole deployment-mgr  --serviceaccount ns1:pipeline
kubectl -n ns2 create rolebinding pipeline-deployment-manager --clusterrole deployment-mgr  --serviceaccount ns2:pipeline
#
kubectl auth can-i get configmap -n ns1 --as system:serviceaccount:ns1:pipeline
