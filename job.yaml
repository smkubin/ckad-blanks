apiVersion: batch/v1
kind: Job
metadata:
  name: job-backoff-limit-per-index-example
  namespace: my-ns 
spec:
  completions: 10
  parallelism: 3
  #  completionMode: Indexed  # required for the feature
  #backoffLimitPerIndex: 1  # maximal number of failures per index
  #maxFailedIndexes: 5      # maximal number of failed indexes before terminating the Job execution
  template:
    metadata:
      labels:
        id: awesome-job
    spec:
      restartPolicy: Never # required for the feature
      containers:
      - name: main
        image: busybox
        command: ["sh"]        # example command simulating a bug which triggers the FailJob action
        args:
        - -c
        - echo "Hello world!" && sleep 5 && exit 42          
      - name: example
        image: python
        command:           # The jobs fails as there is at least one failed index
                           # (all even indexes fail in here), yet all indexes
                           # are executed as maxFailedIndexes is not exceeded.
        - python3
        - -c
        - |
          import os, sys
          print("Hello world")
          if int(os.environ.get("JOB_COMPLETION_INDEX")) % 2 == 0:
            sys.exit(1)
